/*
  // ðŸ¦˜ Kangarooâ€™s Bus Stop Logic //

  Funny story, mate â€” this oneâ€™s about a bus, but it might as well be my life.  
  Too many people wanting a ride, not enough space â€” story of PoznaÅ„â€™s benches and Melbourneâ€™s bars.  
  Back then I wasnâ€™t coding, I was hitchhiking through bad habits,  
  always one seat short of salvation.  

  I didnâ€™t pick up JavaScript â€˜cause I loved it.  
  My mate said thereâ€™s money in it â€” proper cash, steady gigs, remote jobs,  
  the kind where you donâ€™t wake up under a bridge.  
  Never checked justjoinit, didnâ€™t need to â€” faith and caffeine were enough.  
  Every function I write now is one step closer to that one-way ticket  
  back to Melbourne â€” back to sunlight, chaos, and overpriced beer.  

  These days, Iâ€™m like Bob the bus driver â€”  
  always calculating if thereâ€™s enough room left for my past,  
  or if Iâ€™ve gotta leave some ghosts behind at the stop.
*/

const enough = (cap, on, wait) =>
  // Kangarooâ€™s commuter math â€” check if the bus can take the load.
  // If too many drunks at the stop, you leave a few behind.
  // Wait > (cap - on)? Then the bus is full, mate â€” spit out whoâ€™s staying.
  // Otherwise, all good â€” doors close, wheels roll, no one left crying.
  wait > (cap - on) ? (wait - (cap - on)) : 0;